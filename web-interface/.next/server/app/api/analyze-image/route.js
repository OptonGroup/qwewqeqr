"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/analyze-image/route";
exports.ids = ["app/api/analyze-image/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("crypto");

/***/ }),

/***/ "fs/promises":
/*!******************************!*\
  !*** external "fs/promises" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("fs/promises");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fanalyze-image%2Froute&page=%2Fapi%2Fanalyze-image%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fanalyze-image%2Froute.ts&appDir=C%3A%5CUsers%5Copton%5CDownloads%5Cpinterest_parser-main%5Cweb-interface%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Copton%5CDownloads%5Cpinterest_parser-main%5Cweb-interface&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fanalyze-image%2Froute&page=%2Fapi%2Fanalyze-image%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fanalyze-image%2Froute.ts&appDir=C%3A%5CUsers%5Copton%5CDownloads%5Cpinterest_parser-main%5Cweb-interface%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Copton%5CDownloads%5Cpinterest_parser-main%5Cweb-interface&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var C_Users_opton_Downloads_pinterest_parser_main_web_interface_src_app_api_analyze_image_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/analyze-image/route.ts */ \"(rsc)/./src/app/api/analyze-image/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/analyze-image/route\",\n        pathname: \"/api/analyze-image\",\n        filename: \"route\",\n        bundlePath: \"app/api/analyze-image/route\"\n    },\n    resolvedPagePath: \"C:\\\\Users\\\\opton\\\\Downloads\\\\pinterest_parser-main\\\\web-interface\\\\src\\\\app\\\\api\\\\analyze-image\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_Users_opton_Downloads_pinterest_parser_main_web_interface_src_app_api_analyze_image_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/analyze-image/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZhbmFseXplLWltYWdlJTJGcm91dGUmcGFnZT0lMkZhcGklMkZhbmFseXplLWltYWdlJTJGcm91dGUmYXBwUGF0aHM9JnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGYW5hbHl6ZS1pbWFnZSUyRnJvdXRlLnRzJmFwcERpcj1DJTNBJTVDVXNlcnMlNUNvcHRvbiU1Q0Rvd25sb2FkcyU1Q3BpbnRlcmVzdF9wYXJzZXItbWFpbiU1Q3dlYi1pbnRlcmZhY2UlNUNzcmMlNUNhcHAmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZyb290RGlyPUMlM0ElNUNVc2VycyU1Q29wdG9uJTVDRG93bmxvYWRzJTVDcGludGVyZXN0X3BhcnNlci1tYWluJTVDd2ViLWludGVyZmFjZSZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD0mcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ2M7QUFDeUQ7QUFDdEk7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdIQUFtQjtBQUMzQztBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSxpRUFBaUU7QUFDekU7QUFDQTtBQUNBLFdBQVcsNEVBQVc7QUFDdEI7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUN1SDs7QUFFdkgiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9iYW5rLXN0YXRlbWVudC1hbmFseXplci8/MTQzZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBSb3V0ZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IHBhdGNoRmV0Y2ggYXMgX3BhdGNoRmV0Y2ggfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvcGF0Y2gtZmV0Y2hcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCJDOlxcXFxVc2Vyc1xcXFxvcHRvblxcXFxEb3dubG9hZHNcXFxccGludGVyZXN0X3BhcnNlci1tYWluXFxcXHdlYi1pbnRlcmZhY2VcXFxcc3JjXFxcXGFwcFxcXFxhcGlcXFxcYW5hbHl6ZS1pbWFnZVxcXFxyb3V0ZS50c1wiO1xuLy8gV2UgaW5qZWN0IHRoZSBuZXh0Q29uZmlnT3V0cHV0IGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCBuZXh0Q29uZmlnT3V0cHV0ID0gXCJcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvYW5hbHl6ZS1pbWFnZS9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL2FuYWx5emUtaW1hZ2VcIixcbiAgICAgICAgZmlsZW5hbWU6IFwicm91dGVcIixcbiAgICAgICAgYnVuZGxlUGF0aDogXCJhcHAvYXBpL2FuYWx5emUtaW1hZ2Uvcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCJDOlxcXFxVc2Vyc1xcXFxvcHRvblxcXFxEb3dubG9hZHNcXFxccGludGVyZXN0X3BhcnNlci1tYWluXFxcXHdlYi1pbnRlcmZhY2VcXFxcc3JjXFxcXGFwcFxcXFxhcGlcXFxcYW5hbHl6ZS1pbWFnZVxcXFxyb3V0ZS50c1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzIH0gPSByb3V0ZU1vZHVsZTtcbmNvbnN0IG9yaWdpbmFsUGF0aG5hbWUgPSBcIi9hcGkvYW5hbHl6ZS1pbWFnZS9yb3V0ZVwiO1xuZnVuY3Rpb24gcGF0Y2hGZXRjaCgpIHtcbiAgICByZXR1cm4gX3BhdGNoRmV0Y2goe1xuICAgICAgICBzZXJ2ZXJIb29rcyxcbiAgICAgICAgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZVxuICAgIH0pO1xufVxuZXhwb3J0IHsgcm91dGVNb2R1bGUsIHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBvcmlnaW5hbFBhdGhuYW1lLCBwYXRjaEZldGNoLCAgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXJvdXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fanalyze-image%2Froute&page=%2Fapi%2Fanalyze-image%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fanalyze-image%2Froute.ts&appDir=C%3A%5CUsers%5Copton%5CDownloads%5Cpinterest_parser-main%5Cweb-interface%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Copton%5CDownloads%5Cpinterest_parser-main%5Cweb-interface&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./src/app/api/analyze-image/route.ts":
/*!********************************************!*\
  !*** ./src/app/api/analyze-image/route.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var fs_promises__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! fs/promises */ \"fs/promises\");\n/* harmony import */ var fs_promises__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(fs_promises__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! uuid */ \"(rsc)/./node_modules/uuid/dist/esm/v4.js\");\n\n\n\n\n\n\n// Путь к Python API\nconst PYTHON_API_URL = process.env.PYTHON_API_URL || \"http://localhost:8000\";\n// Проверка доступности Python API\nasync function checkApiAvailability() {\n    try {\n        const response = await fetch(`${PYTHON_API_URL}/health`, {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            signal: AbortSignal.timeout(3000) // Таймаут 3 секунды\n        });\n        return response.ok;\n    } catch (error) {\n        console.error(\"Ошибка при проверке доступности API:\", error);\n        return false;\n    }\n}\nasync function POST(request) {\n    try {\n        // Проверяем доступность Python API\n        const isApiAvailable = await checkApiAvailability();\n        console.log(`Python API доступен: ${isApiAvailable}`);\n        // Получаем FormData из запроса\n        const formData = await request.formData();\n        const file = formData.get(\"file\");\n        if (!file) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Файл не найден\"\n            }, {\n                status: 400\n            });\n        }\n        // Проверяем тип файла\n        if (!file.type.startsWith(\"image/\")) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Пожалуйста, загрузите изображение\"\n            }, {\n                status: 400\n            });\n        }\n        // Создаем директорию для загрузок, если она не существует\n        const uploadDir = (0,path__WEBPACK_IMPORTED_MODULE_1__.join)(process.cwd(), \"public\", \"uploads\");\n        try {\n            await (0,fs_promises__WEBPACK_IMPORTED_MODULE_2__.access)(uploadDir);\n        } catch  {\n            await (0,fs_promises__WEBPACK_IMPORTED_MODULE_2__.mkdir)(uploadDir, {\n                recursive: true\n            });\n        }\n        // Создаем уникальное имя файла\n        const fileExt = path__WEBPACK_IMPORTED_MODULE_1___default().extname(file.name) || \".jpg\";\n        const filename = `${(0,uuid__WEBPACK_IMPORTED_MODULE_3__[\"default\"])()}${fileExt}`;\n        const filepath = (0,path__WEBPACK_IMPORTED_MODULE_1__.join)(uploadDir, filename);\n        try {\n            // Читаем содержимое файла\n            const bytes = await file.arrayBuffer();\n            const buffer = Buffer.from(bytes);\n            // Сохраняем файл локально\n            await (0,fs_promises__WEBPACK_IMPORTED_MODULE_2__.writeFile)(filepath, buffer);\n            // URL файла для использования во фронтенде\n            const fileUrl = `/uploads/${filename}`;\n            try {\n                // Если API недоступен, сразу возвращаем заглушку с предупреждением\n                if (!isApiAvailable) {\n                    console.error(\"Python API недоступен, возвращаем тестовые данные\");\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        ...getMockAnalysisResponse(fileUrl),\n                        imageUrl: fileUrl,\n                        error: \"Python API недоступен. Возможно, сервер не запущен или запущен не на порту 8000. Возвращены тестовые данные.\"\n                    });\n                }\n                // Создаем новый FormData для отправки в Python API\n                const pythonApiFormData = new FormData();\n                // В Python API ожидается файл с именем 'file'\n                pythonApiFormData.append(\"file\", new Blob([\n                    buffer\n                ], {\n                    type: file.type\n                }), filename);\n                console.log(`Отправляем запрос к Python API: ${PYTHON_API_URL}/analyze-image`);\n                // Пытаемся отправить запрос на анализ изображения в Python API\n                const pythonApiResponse = await fetch(`${PYTHON_API_URL}/analyze-image`, {\n                    method: \"POST\",\n                    body: pythonApiFormData\n                });\n                if (pythonApiResponse.ok) {\n                    // Если успешно получили ответ от Python API\n                    const analysisData = await pythonApiResponse.json();\n                    console.log(\"Ответ от Python API:\", analysisData);\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        items: parseClothingItemsFromAnalysis(analysisData),\n                        fullDescription: analysisData.analysis || \"\",\n                        imageUrl: fileUrl\n                    });\n                } else {\n                    const errorText = await pythonApiResponse.text();\n                    console.error(`Ошибка Python API: ${pythonApiResponse.status} ${pythonApiResponse.statusText}`, errorText);\n                    // Если не удалось получить ответ от Python API, используем моковые данные\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        ...getMockAnalysisResponse(fileUrl),\n                        imageUrl: fileUrl,\n                        error: `Не удалось подключиться к серверу анализа изображений: ${pythonApiResponse.status} ${pythonApiResponse.statusText}. Возвращены тестовые данные.`\n                    });\n                }\n            } catch (error) {\n                console.error(\"Ошибка при обращении к Python API:\", error);\n                // В случае ошибки вызова Python API возвращаем моковые данные\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    ...getMockAnalysisResponse(fileUrl),\n                    imageUrl: fileUrl,\n                    error: `Не удалось подключиться к серверу анализа изображений: ${error.message}. Возвращены тестовые данные.`\n                });\n            }\n        } catch (error) {\n            console.error(\"Ошибка при сохранении файла:\", error);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Ошибка при обработке файла\"\n            }, {\n                status: 500\n            });\n        }\n    } catch (error) {\n        console.error(\"Ошибка при обработке запроса:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Внутренняя ошибка сервера\"\n        }, {\n            status: 500\n        });\n    }\n}\n// Функция для разбора ответа от Python API и преобразования в формат ClothingRecognitionData\nfunction parseClothingItemsFromAnalysis(analysisData) {\n    // Если API вернул уже правильно отформатированные данные\n    if (analysisData.elements && Array.isArray(analysisData.elements)) {\n        return analysisData.elements.map((item)=>({\n                type: item.type || item.name || \"Предмет одежды\",\n                color: item.color || \"неизвестный\",\n                description: item.description || \"\",\n                material: item.material,\n                pattern: item.pattern,\n                gender: item.gender\n            }));\n    }\n    // Если API вернул данные в поле 'analysis'\n    if (analysisData.analysis) {\n        console.log(\"Получен анализ текста:\", analysisData.analysis);\n    }\n    // Если API вернул данные в нестандартной структуре, проверяем все возможные поля\n    const possibleDataFields = [\n        \"data\",\n        \"result\",\n        \"results\",\n        \"items\",\n        \"clothing_items\"\n    ];\n    for (const field of possibleDataFields){\n        if (analysisData[field] && (Array.isArray(analysisData[field]) || typeof analysisData[field] === \"object\")) {\n            console.log(`Найдены данные в поле ${field}:`, analysisData[field]);\n            if (Array.isArray(analysisData[field])) {\n                return analysisData[field].map((item)=>({\n                        type: item.type || item.name || \"Предмет одежды\",\n                        color: item.color || \"неизвестный\",\n                        description: item.description || \"\",\n                        material: item.material,\n                        pattern: item.pattern,\n                        gender: item.gender\n                    }));\n            }\n        }\n    }\n    // Если API вернул анализ в текстовом формате, пытаемся извлечь информацию о предметах одежды\n    const analysisText = analysisData.analysis || analysisData.description || \"\";\n    if (!analysisText) {\n        console.log(\"Нет текстового анализа, возвращаем моковые данные\");\n        return getMockAnalysisResponse().items;\n    }\n    // Пытаемся извлечь элементы одежды из текста\n    const clothingItems = [];\n    // Ищем упоминания предметов одежды в тексте\n    const commonClothingItems = [\n        \"футболка\",\n        \"рубашка\",\n        \"блузка\",\n        \"платье\",\n        \"юбка\",\n        \"брюки\",\n        \"джинсы\",\n        \"шорты\",\n        \"куртка\",\n        \"пальто\",\n        \"свитер\",\n        \"кардиган\",\n        \"худи\",\n        \"джемпер\",\n        \"кроссовки\",\n        \"туфли\",\n        \"ботинки\",\n        \"сапоги\",\n        \"кеды\",\n        \"шапка\",\n        \"шляпа\",\n        \"берет\",\n        \"кепка\",\n        \"шарф\",\n        \"перчатки\",\n        \"носки\",\n        \"колготки\",\n        \"белье\",\n        \"костюм\",\n        \"пиджак\",\n        \"жакет\",\n        \"блейзер\"\n    ];\n    // Ищем цвета\n    const commonColors = [\n        \"белый\",\n        \"черный\",\n        \"красный\",\n        \"синий\",\n        \"зеленый\",\n        \"желтый\",\n        \"оранжевый\",\n        \"фиолетовый\",\n        \"розовый\",\n        \"коричневый\",\n        \"серый\",\n        \"бежевый\",\n        \"голубой\"\n    ];\n    // Ищем материалы\n    const commonMaterials = [\n        \"хлопок\",\n        \"лен\",\n        \"шерсть\",\n        \"кожа\",\n        \"замша\",\n        \"шелк\",\n        \"деним\",\n        \"полиэстер\",\n        \"нейлон\",\n        \"трикотаж\",\n        \"вискоза\",\n        \"акрил\",\n        \"вельвет\",\n        \"твид\",\n        \"кашемир\"\n    ];\n    console.log(\"Анализируем текст:\", analysisText);\n    // Для каждого предмета одежды проверяем, упоминается ли он в тексте\n    for (const item of commonClothingItems){\n        const regex = new RegExp(`\\\\b${item}\\\\b`, \"i\");\n        if (regex.test(analysisText.toLowerCase())) {\n            console.log(`Найден предмет: ${item}`);\n            // Если предмет найден, пытаемся найти его цвет\n            let color = \"неизвестный\";\n            for (const c of commonColors){\n                const colorRegex = new RegExp(`\\\\b${c}\\\\w*\\\\s+${item}\\\\b|\\\\b${item}\\\\s+${c}\\\\w*\\\\b`, \"i\");\n                if (colorRegex.test(analysisText.toLowerCase())) {\n                    color = c;\n                    console.log(`  Найден цвет: ${color}`);\n                    break;\n                }\n            }\n            // Пытаемся найти материал\n            let material;\n            for (const m of commonMaterials){\n                const materialRegex = new RegExp(`\\\\b${m}\\\\w*\\\\s+${item}\\\\b|\\\\b${item}\\\\s+из\\\\s+${m}\\\\w*\\\\b|\\\\b${m}\\\\w*\\\\s+${item}\\\\b`, \"i\");\n                if (materialRegex.test(analysisText.toLowerCase())) {\n                    material = m;\n                    console.log(`  Найден материал: ${material}`);\n                    break;\n                }\n            }\n            clothingItems.push({\n                type: item.charAt(0).toUpperCase() + item.slice(1),\n                color,\n                description: \"\",\n                ...material && {\n                    material\n                },\n                gender: determineGender(analysisText, item)\n            });\n        }\n    }\n    if (clothingItems.length > 0) {\n        console.log(\"Найдены предметы одежды:\", clothingItems);\n        return clothingItems;\n    } else {\n        console.log(\"Не удалось распознать предметы одежды в тексте, возвращаем моковые данные\");\n        return getMockAnalysisResponse().items;\n    }\n}\n// Заглушка для тестирования, используется когда нет доступа к Python API\nfunction getMockAnalysisResponse(imageUrl) {\n    return {\n        items: [\n            {\n                type: \"Футболка\",\n                color: \"белая\",\n                description: \"хлопковая с круглым вырезом\",\n                material: \"хлопок\",\n                gender: \"женский\"\n            },\n            {\n                type: \"Джинсы\",\n                color: \"синие\",\n                description: \"классические прямого кроя\",\n                material: \"деним\",\n                gender: \"женский\"\n            }\n        ],\n        fullDescription: \"На изображении представлен повседневный комплект, состоящий из белой хлопковой футболки с круглым вырезом и классических прямых синих джинсов.\"\n    };\n}\n// Функция для определения пола из текста анализа\nfunction determineGender(text, itemName) {\n    // Ищем явное указание пола для всего образа\n    const generalGenderMatch = text.match(/ПОЛ:\\s*(мужской|женский|унисекс)/i);\n    let generalGender = generalGenderMatch ? generalGenderMatch[1].toLowerCase() : undefined;\n    // Ищем указание пола для конкретного предмета\n    const itemGenderRegex = new RegExp(`(${itemName}).*?пол:\\\\s*(мужской|женский|унисекс)`, \"i\");\n    const itemGenderMatch = text.match(itemGenderRegex);\n    // Возвращаем пол для конкретного предмета, если найден, иначе общий пол\n    return itemGenderMatch ? itemGenderMatch[2].toLowerCase() : generalGender;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/analyze-image/route.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/uuid"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fanalyze-image%2Froute&page=%2Fapi%2Fanalyze-image%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fanalyze-image%2Froute.ts&appDir=C%3A%5CUsers%5Copton%5CDownloads%5Cpinterest_parser-main%5Cweb-interface%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Copton%5CDownloads%5Cpinterest_parser-main%5Cweb-interface&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();