import React, { useState } from 'react';
import { Card, CardContent } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Link as LinkIcon, ExternalLink, Search, ShoppingBag, ChevronDown, ChevronUp } from 'lucide-react';
import { ProductCard } from './product-card';
import { Badge } from '@/components/ui/badge';

// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –ø—Ä–µ–¥–º–µ—Ç–∞ –æ–¥–µ–∂–¥—ã –∏–∑ Pinterest
interface ClothingItem {
  type: string;    // –¢–∏–ø –ø—Ä–µ–¥–º–µ—Ç–∞ (—Ñ—É—Ç–±–æ–ª–∫–∞, –¥–∂–∏–Ω—Å—ã –∏ —Ç.–¥.)
  color: string;   // –¶–≤–µ—Ç –ø—Ä–µ–¥–º–µ—Ç–∞
  description: string; // –û–ø–∏—Å–∞–Ω–∏–µ (–ø—Ä–∏–Ω—Ç, —Ñ–∞—Å–æ–Ω –∏ —Ç.–¥.)
  gender: string;  // –ü–æ–ª (–º—É–∂—Å–∫–æ–π, –∂–µ–Ω—Å–∫–∏–π)
}

// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–æ–∏—Å–∫–∞ –≤ Pinterest
interface PinterestOutfit {
  imageUrl: string;
  sourceUrl: string;
  description: string;
  clothingItems: ClothingItem[];
}

// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Ç–æ–≤–∞—Ä–∞ Wildberries
interface WildberriesProduct {
  id: string;
  name: string;
  description: string;
  price: number;
  oldPrice?: number;
  imageUrl: string;
  imageUrls?: string[];
  category: string;
  url?: string;
  gender?: string;
}

interface PinterestOutfitSectionProps {
  outfit: PinterestOutfit;
  isLoading: boolean;
}

const PinterestOutfitSection: React.FC<PinterestOutfitSectionProps> = ({ outfit, isLoading }) => {
  const [productsByClothingItem, setProductsByClothingItem] = useState<Record<string, WildberriesProduct[]>>({});
  const [loadingItems, setLoadingItems] = useState<Record<string, boolean>>({});
  const [expandedItems, setExpandedItems] = useState<Record<string, boolean>>({});
  const [imageError, setImageError] = useState<boolean>(false);
  const [showFullAnalysis, setShowFullAnalysis] = useState<boolean>(false);

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É –ø—Ä–µ–¥–º–µ—Ç—É –æ–¥–µ–∂–¥—ã
  const searchProductsForClothingItem = async (item: ClothingItem, itemIndex: number) => {
    // –°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–ª—é—á –¥–ª—è —ç—Ç–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞
    const itemKey = `${itemIndex}-${item.type}`;
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞–≥—Ä—É–∑–∫–∏
    setLoadingItems(prev => ({ ...prev, [itemKey]: true }));
    
    try {
      // –§–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å —Å —É—á–µ—Ç–æ–º –ø–æ–ª–∞
      // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª –≤ –Ω–∞—á–∞–ª–æ –∑–∞–ø—Ä–æ—Å–∞ –¥–ª—è –ª—É—á—à–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
      const genderText = 
        item.gender === '–º—É–∂—Å–∫–æ–π' ? '–º—É–∂—Å–∫–æ–π' : 
        item.gender === '–∂–µ–Ω—Å–∫–∏–π' ? '–∂–µ–Ω—Å–∫–∏–π' : '';
      
      // –û—á–∏—â–∞–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –æ—Ç —Å–∫–æ–±–æ–∫ –∏ –ª–∏—à–Ω–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤
      const cleanDescription = (item.description || '')
        .replace(/[()[\]{}]/g, '')
        .replace(/\s+/g, ' ')
        .trim();
      
      // –§–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å —Å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º –Ω–∞ —Ç–∏–ø –∏ —Ü–≤–µ—Ç
      const searchQuery = [
        genderText,
        item.type || '',
        item.color || '',
        cleanDescription
      ].filter(Boolean).join(' ').trim();
      
      // –§–æ—Ä–º–∏—Ä—É–µ–º URL —Å —É—á–µ—Ç–æ–º –ø–æ–ª–∞
      let url = `/api/search-products?query=${encodeURIComponent(searchQuery)}&limit=3`;
      
      // –ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω –ø–æ–ª, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ –≤ –∑–∞–ø—Ä–æ—Å –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞ –±—ç–∫–µ–Ω–¥–µ
      if (item.gender) {
        url += `&gender=${encodeURIComponent(item.gender)}`;
      }
      
      console.log(`–ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤: ${searchQuery}, –ø–æ–ª: ${item.gender}`);
      
      const response = await fetch(url);
      
      if (!response.ok) {
        throw new Error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ —Ç–æ–≤–∞—Ä–æ–≤: ${response.statusText}`);
      }
      
      const products = await response.json();
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞ –¥–ª—è —ç—Ç–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞
      setProductsByClothingItem(prev => ({ 
        ...prev, 
        [itemKey]: products 
      }));
      
      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º, —á—Ç–æ —ç—Ç–æ—Ç —ç–ª–µ–º–µ–Ω—Ç —Ä–∞—Å–∫—Ä—ã—Ç
      setExpandedItems(prev => ({ ...prev, [itemKey]: true }));
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ —Ç–æ–≤–∞—Ä–æ–≤:', error);
    } finally {
      // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞–≥—Ä—É–∑–∫–∏
      setLoadingItems(prev => ({ ...prev, [itemKey]: false }));
    }
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–æ—Å—Ç–∏ —ç–ª–µ–º–µ–Ω—Ç–∞
  const toggleItemExpanded = (itemKey: string) => {
    setExpandedItems(prev => ({ 
      ...prev, 
      [itemKey]: !prev[itemKey] 
    }));
  };
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–æ–ª–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –æ–±—Ä–∞–∑–∞
  const generateFullAnalysis = () => {
    if (!outfit.clothingItems || outfit.clothingItems.length === 0) {
      return '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –æ–±—Ä–∞–∑–∞.';
    }
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—Ä–µ–æ–±–ª–∞–¥–∞—é—â–∏–π –ø–æ–ª –≤ –æ–±—Ä–∞–∑–µ
    const genderCounts = outfit.clothingItems.reduce((counts, item) => {
      const gender = item.gender || '—É–Ω–∏—Å–µ–∫—Å';
      counts[gender] = (counts[gender] || 0) + 1;
      return counts;
    }, {} as Record<string, number>);
    
    let predominantGender = '–Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω';
    let maxCount = 0;
    
    for (const [gender, count] of Object.entries(genderCounts)) {
      if (count > maxCount) {
        maxCount = count;
        predominantGender = gender;
      }
    }
    
    // –°–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø—Ä–µ–¥–º–µ—Ç–æ–≤
    const itemsList = outfit.clothingItems
      .map((item, index) => {
        const genderIcon = item.gender === '–º—É–∂—Å–∫–æ–π' ? 'üë®' : item.gender === '–∂–µ–Ω—Å–∫–∏–π' ? 'üë©' : 'üßë';
        return `${index + 1}. ${genderIcon} ${item.color || '–¶–≤–µ—Ç –Ω–µ —É–∫–∞–∑–∞–Ω'} ${item.type || '–ø—Ä–µ–¥–º–µ—Ç'} ${item.description ? `(${item.description})` : ''}`.trim();
      })
      .join('\n');
    
    // –°–æ–∑–¥–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∫–∞–∂–¥–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞
    const detailedItems = outfit.clothingItems
      .map(item => {
        const genderIcon = item.gender === '–º—É–∂—Å–∫–æ–π' ? 'üë®' : item.gender === '–∂–µ–Ω—Å–∫–∏–π' ? 'üë©' : 'üßë';
        return `${genderIcon} ${item.type?.toUpperCase() || '–ü–†–ï–î–ú–ï–¢'}:
- –¶–≤–µ—Ç: ${item.color || '–Ω–µ —É–∫–∞–∑–∞–Ω'}
- –ü–æ–ª: ${item.gender || '—É–Ω–∏—Å–µ–∫—Å'} 
- –û–ø–∏—Å–∞–Ω–∏–µ: ${item.description || '–ù–µ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏'}`
      })
      .join('\n\n');
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∏–ª—å –æ–±—Ä–∞–∑–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤
    let style = '–ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω—ã–π';
    const items = outfit.clothingItems.map(item => `${item.color} ${item.type} ${item.description || ''}`).join(' ').toLowerCase();
    const description = (outfit.description || '').toLowerCase();
    
    if (items.includes('–ø–∏–¥–∂–∞–∫') || items.includes('–±–ª—É–∑–∫–∞') || items.includes('–±—Ä—é–∫–∏') || description.includes('–æ—Ñ–∏—Å') || description.includes('–¥–µ–ª–æ–≤')) {
      style = '–¥–µ–ª–æ–≤–æ–π';
    } else if (items.includes('–ø–ª–∞—Ç—å–µ') && (items.includes('–≤–µ—á–µ—Ä') || description.includes('–≤–µ—á–µ—Ä'))) {
      style = '–≤–µ—á–µ—Ä–Ω–∏–π';
    } else if (items.includes('—Å–ø–æ—Ä—Ç') || items.includes('–∫—Ä–æ—Å—Å–æ–≤–∫–∏') || items.includes('—Ö—É–¥–∏') || description.includes('—Å–ø–æ—Ä—Ç')) {
      style = '—Å–ø–æ—Ä—Ç–∏–≤–Ω—ã–π';
    } else if (items.includes('–¥–∂–∏–Ω—Å—ã') || items.includes('—Ñ—É—Ç–±–æ–ª–∫–∞') || items.includes('–∫–µ–¥—ã')) {
      style = '–∫—ç–∂—É–∞–ª';
    } else if (items.includes('–ø–ª—è–∂') || items.includes('–∫—É–ø–∞–ª—å–Ω–∏–∫') || items.includes('—à–æ—Ä—Ç—ã') && description.includes('–ª–µ—Ç')) {
      style = '–ø–ª—è–∂–Ω—ã–π';
    } else if (items.includes('–∑–∏–º–Ω') || items.includes('–ø—É—Ö–æ–≤–∏–∫') || items.includes('—à–∞–ø–∫–∞') || items.includes('—Å–≤–∏—Ç–µ—Ä')) {
      style = '–∑–∏–º–Ω–∏–π';
    }
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º –æ–±—â–µ–µ –æ–ø–∏—Å–∞–Ω–∏–µ
    const genderText = predominantGender === '–º—É–∂—Å–∫–æ–π' ? '–º—É–∂—Å–∫–æ–π' : 
                       predominantGender === '–∂–µ–Ω—Å–∫–∏–π' ? '–∂–µ–Ω—Å–∫–∏–π' : 
                       predominantGender === '—É–Ω–∏—Å–µ–∫—Å' ? '—É–Ω–∏—Å–µ–∫—Å' : '–Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω';
    
    const generalDescription = `–û–ë–©–ï–ï:
–ü–æ–ª: ${genderText}
–°—Ç–∏–ª—å: ${style}
–û–ø–∏—Å–∞–Ω–∏–µ: –û–±—Ä–∞–∑ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Å–æ–±–æ–π ${style} —Å—Ç–∏–ª—å –æ–¥–µ–∂–¥—ã ${genderText === '–º—É–∂—Å–∫–æ–π' ? '–¥–ª—è –º—É–∂—á–∏–Ω' : genderText === '–∂–µ–Ω—Å–∫–∏–π' ? '–¥–ª—è –∂–µ–Ω—â–∏–Ω' : ''}, ${
      style === '–¥–µ–ª–æ–≤–æ–π' ? '–ø–æ–¥—Ö–æ–¥—è—â–∏–π –¥–ª—è –æ—Ñ–∏—Å–Ω–æ–π –∏–ª–∏ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–π –æ–±—Å—Ç–∞–Ω–æ–≤–∫–∏.' : 
      style === '–≤–µ—á–µ—Ä–Ω–∏–π' ? '–∏–¥–µ–∞–ª—å–Ω—ã–π –¥–ª—è –æ—Å–æ–±—ã—Ö —Å–ª—É—á–∞–µ–≤ –∏ –≤—ã—Ö–æ–¥–æ–≤ –≤ —Å–≤–µ—Ç.' : 
      style === '—Å–ø–æ—Ä—Ç–∏–≤–Ω—ã–π' ? '—É–¥–æ–±–Ω—ã–π –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –æ–±—Ä–∞–∑–∞ –∂–∏–∑–Ω–∏ –∏ –∑–∞–Ω—è—Ç–∏–π —Å–ø–æ—Ä—Ç–æ–º.' : 
      style === '–ø–ª—è–∂–Ω—ã–π' ? '–æ—Ç–ª–∏—á–Ω–æ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –¥–ª—è –æ—Ç–¥—ã—Ö–∞ —É –≤–æ–¥—ã –∏ –Ω–∞ –ø–ª—è–∂–µ.' :
      style === '–∑–∏–º–Ω–∏–π' ? '—Ç–µ–ø–ª—ã–π –∏ –∫–æ–º—Ñ–æ—Ä—Ç–Ω—ã–π –¥–ª—è —Ö–æ–ª–æ–¥–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –≥–æ–¥–∞.' :
      '–∫–æ–º—Ñ–æ—Ä—Ç–Ω—ã–π –¥–ª—è –ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω–æ–π –Ω–æ—Å–∫–∏.'
    } ${outfit.description || ''}`;
    
    // –°–æ–±–∏—Ä–∞–µ–º –ø–æ–ª–Ω—ã–π –∞–Ω–∞–ª–∏–∑
    return `${generalDescription}\n\n–°–ø–∏—Å–æ–∫ –ø—Ä–µ–¥–º–µ—Ç–æ–≤:\n${itemsList}\n\n–î–µ—Ç–∞–ª–∏ –ø—Ä–µ–¥–º–µ—Ç–æ–≤:\n${detailedItems}`;
  };

  return (
    <Card className="mb-8 border-primary/20">
      <CardContent className="p-0">
        <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
          {/* –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ –∏–∑ Pinterest */}
          <div className="p-6 bg-muted/30">
            <div className="aspect-[3/4] relative overflow-hidden rounded-lg mb-4">
              {!imageError ? (
                <img 
                  src={outfit.imageUrl} 
                  alt="Pinterest Outfit" 
                  className="w-full h-full object-cover"
                  onError={(e) => {
                    // –ï—Å–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –∑–∞–≥—Ä—É–∑–∏–ª–æ—Å—å, –∑–∞–º–µ–Ω—è–µ–º –Ω–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –∑–∞–≥–ª—É—à–∫—É
                    setImageError(true);
                    (e.target as HTMLImageElement).src = 'https://placehold.co/600x800/e2e8f0/64748b?text=–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ+–Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ';
                  }}
                />
              ) : (
                <div className="w-full h-full flex items-center justify-center bg-muted/40">
                  <p className="text-muted-foreground text-sm text-center px-4">
                    –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ
                  </p>
                </div>
              )}
              
              {/* –û—Ç–º–µ—Ç–∫–∏ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –æ–¥–µ–∂–¥—ã –Ω–∞ —Ñ–æ—Ç–æ */}
              {outfit.clothingItems && outfit.clothingItems.length > 0 && (
                <div className="absolute bottom-2 right-2 bg-black/70 p-2 rounded-md max-w-[90%] text-white">
                  <p className="text-xs mb-1">–ù–∞–π–¥–µ–Ω–Ω–∞—è –æ–¥–µ–∂–¥–∞:</p>
                  <div className="flex flex-wrap gap-1">
                    {outfit.clothingItems.map((item, idx) => (
                      <Badge key={idx} variant="outline" className="bg-primary/20 text-white border-primary/50 text-xs">
                        {item.color || ''} {item.type || ''}
                      </Badge>
                    ))}
                  </div>
                </div>
              )}
            </div>
            <h3 className="font-semibold text-lg mb-2">{outfit.description || '–°—Ç–∏–ª—å–Ω—ã–π –æ–±—Ä–∞–∑'}</h3>
            {outfit.sourceUrl && (
              <a 
                href={outfit.sourceUrl} 
                target="_blank" 
                rel="noopener noreferrer"
                className="flex items-center text-sm text-primary hover:underline"
              >
                <ExternalLink className="h-4 w-4 mr-1" />
                –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ Pinterest
              </a>
            )}
            
            {/* –ê–Ω–∞–ª–∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è - –Ω–æ–≤–∞—è —Å–µ–∫—Ü–∏—è */}
            {outfit.clothingItems && outfit.clothingItems.length > 0 && (
              <div className="mt-4 bg-muted/30 rounded-lg p-4 border border-border/40">
                <h4 className="font-medium text-sm">–ê–Ω–∞–ª–∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:</h4>
                <div className="mt-2">
                  <div className="mb-2">
                    <p className="text-xs text-muted-foreground mb-1">–ê–ª–≥–æ—Ä–∏—Ç–º –æ–ø—Ä–µ–¥–µ–ª–∏–ª —Å–ª–µ–¥—É—é—â–∏–µ –ø—Ä–µ–¥–º–µ—Ç—ã –æ–¥–µ–∂–¥—ã:</p>
                    <div className="flex flex-wrap gap-1 mb-2">
                      {outfit.clothingItems.slice(0, 3).map((item, idx) => (
                        <Badge 
                          key={idx} 
                          variant="outline" 
                          className={`${
                            item.gender === '–º—É–∂—Å–∫–æ–π' 
                              ? 'bg-blue-50 text-blue-700 border-blue-200' 
                              : item.gender === '–∂–µ–Ω—Å–∫–∏–π' 
                                ? 'bg-pink-50 text-pink-700 border-pink-200' 
                                : 'bg-primary/10'
                          }`}
                        >
                          {item.type || '–ü—Ä–µ–¥–º–µ—Ç'}: {item.color || ''} {item.description ? `(${item.description})` : ''}
                        </Badge>
                      ))}
                    </div>
                  </div>
                  
                  <Button 
                    variant="outline" 
                    size="sm" 
                    className="w-full text-xs flex items-center justify-center gap-1"
                    onClick={() => setShowFullAnalysis(!showFullAnalysis)}
                  >
                    {showFullAnalysis ? <ChevronUp className="h-3 w-3" /> : <ChevronDown className="h-3 w-3" />}
                    {showFullAnalysis ? "–°–∫—Ä—ã—Ç—å –ø–æ–ª–Ω—ã–π –∞–Ω–∞–ª–∏–∑" : "–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–ª–Ω—ã–π –∞–Ω–∞–ª–∏–∑"}
                  </Button>
                  
                  {showFullAnalysis && (
                    <div className="mt-2 text-xs text-muted-foreground p-2 bg-background/50 rounded border border-border/30 whitespace-pre-line">
                      {generateFullAnalysis()}
                    </div>
                  )}
                </div>
              </div>
            )}
          </div>

          {/* –°–ø–∏—Å–æ–∫ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –æ–¥–µ–∂–¥—ã –∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö —Ç–æ–≤–∞—Ä–æ–≤ */}
          <div className="col-span-1 md:col-span-2 p-6">
            <h3 className="font-semibold text-xl mb-4">–≠–ª–µ–º–µ–Ω—Ç—ã –æ–±—Ä–∞–∑–∞</h3>
            
            {outfit.clothingItems && outfit.clothingItems.length > 0 ? (
              <div className="space-y-6">
                {outfit.clothingItems.map((item, index) => {
                  const itemKey = `${index}-${item.type}`;
                  const products = productsByClothingItem[itemKey] || [];
                  const isLoading = loadingItems[itemKey] || false;
                  const isExpanded = expandedItems[itemKey] || false;
                  
                  return (
                    <div key={itemKey} className="pb-4 border-b border-border/50 last:border-0">
                      <div className="flex justify-between items-center mb-2">
                        <div className="flex-1">
                          <h4 className="font-medium flex items-center">
                            <Badge variant="outline" className="mr-2 bg-primary/10">
                              {item.gender === '–º—É–∂—Å–∫–æ–π' ? '–ú' : item.gender === '–∂–µ–Ω—Å–∫–∏–π' ? '–ñ' : '–£'}
                            </Badge>
                            {item.color || ''} {item.type || ''} {item.description ? ` ${item.description}` : ''}
                          </h4>
                        </div>
                        
                        <div className="flex gap-2">
                          {products.length > 0 ? (
                            <Button 
                              variant="ghost" 
                              size="sm"
                              onClick={() => toggleItemExpanded(itemKey)}
                              className="text-xs"
                            >
                              {isExpanded ? '–°–∫—Ä—ã—Ç—å' : '–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ—Ö–æ–∂–∏–µ'}
                            </Button>
                          ) : (
                            <Button
                              variant="outline"
                              size="sm"
                              onClick={() => searchProductsForClothingItem(item, index)}
                              disabled={isLoading}
                              className="flex items-center gap-1 text-xs"
                            >
                              {isLoading ? (
                                <>
                                  <div className="animate-spin w-3 h-3 border-2 border-primary border-t-transparent rounded-full" />
                                  –ü–æ–∏—Å–∫...
                                </>
                              ) : (
                                <>
                                  <Search className="h-3 w-3" />
                                  –ù–∞–π—Ç–∏ –Ω–∞ WB
                                </>
                              )}
                            </Button>
                          )}
                        </div>
                      </div>
                      
                      {/* –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –Ω–∞–π–¥–µ–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å –∏ —Å–µ–∫—Ü–∏—è —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–∞ */}
                      {isExpanded && products.length > 0 && (
                        <div className="grid grid-cols-1 sm:grid-cols-3 gap-3 mt-4">
                          {products.map(product => (
                            <ProductCard 
                              key={product.id} 
                              item={{
                                id: product.id,
                                name: product.name,
                                description: product.description,
                                price: product.price,
                                oldPrice: product.oldPrice,
                                imageUrl: product.imageUrl,
                                category: product.category,
                                url: product.url || `https://www.wildberries.ru/catalog/${product.id}/detail.aspx`,
                                gender: product.gender
                              }} 
                            />
                          ))}
                        </div>
                      )}

                      {/* –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—É—é –∫–Ω–æ–ø–∫—É, –µ—Å–ª–∏ —Ç–æ–≤–∞—Ä—ã —É–∂–µ –Ω–∞–π–¥–µ–Ω—ã, –Ω–æ —Å–∫—Ä—ã—Ç—ã */}
                      {!isExpanded && products.length > 0 && (
                        <div className="mt-2">
                          <Button
                            variant="default"
                            size="sm"
                            className="w-full text-xs"
                            onClick={() => toggleItemExpanded(itemKey)}
                          >
                            <ShoppingBag className="h-3 w-3 mr-1" />
                            –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ—Ö–æ–∂–∏–µ —Ç–æ–≤–∞—Ä—ã ({products.length})
                          </Button>
                        </div>
                      )}
                    </div>
                  );
                })}
              </div>
            ) : (
              <div className="text-center py-6 text-muted-foreground">
                <p>–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –ø—Ä–µ–¥–º–µ—Ç–∞—Ö –æ–¥–µ–∂–¥—ã –≤ —ç—Ç–æ–º –æ–±—Ä–∞–∑–µ.</p>
                <p className="mt-2">–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –Ω–æ–≤—ã–π –ø–æ–∏—Å–∫ –∏–ª–∏ –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–π –æ–±—Ä–∞–∑.</p>
              </div>
            )}
          </div>
        </div>
      </CardContent>
    </Card>
  );
};

export default PinterestOutfitSection; 